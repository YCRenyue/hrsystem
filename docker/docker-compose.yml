version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: hr_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-hr_system_root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-hr_system}
      MYSQL_USER: ${MYSQL_USER:-hr_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-hr_password}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ../database:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - hr_network

  redis:
    image: redis:7-alpine
    container_name: hr_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - hr_network

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: hr_backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-3001}:3000"
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE:-hr_system}
      DB_USER: ${MYSQL_USER:-hr_user}
      DB_PASSWORD: ${MYSQL_PASSWORD:-hr_password}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here}
    depends_on:
      - mysql
      - redis
    volumes:
      - ../backend:/app
      - /app/node_modules
    networks:
      - hr_network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: hr_frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    environment:
      REACT_APP_API_URL: http://localhost:${BACKEND_PORT:-3001}
    depends_on:
      - backend
    networks:
      - hr_network

  nginx:
    image: nginx:alpine
    container_name: hr_nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - hr_network

volumes:
  mysql_data:
  redis_data:

networks:
  hr_network:
    driver: bridge